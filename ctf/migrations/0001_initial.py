# Generated by Django 3.2.7 on 2021-09-25 11:09

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Information',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='お知らせタイトル')),
                ('contents', models.TextField(verbose_name='お知らせ内容')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='お知らせ作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='お知らせ更新日時')),
            ],
            options={
                'verbose_name': 'お知らせ',
                'verbose_name_plural': 'お知らせ',
                'db_table': 'information',
            },
        ),
        migrations.CreateModel(
            name='Inquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='名前')),
                ('email', models.EmailField(max_length=254, verbose_name='メールアドレス')),
                ('subject', models.CharField(max_length=255, verbose_name='お問い合わせ件名')),
                ('contents', models.TextField(verbose_name='お問い合わせ内容')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='お問い合わせ日時')),
            ],
            options={
                'verbose_name': 'お問い合わせ',
                'verbose_name_plural': 'お問い合わせ',
                'db_table': 'inquiry',
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='問題名')),
                ('file', models.FileField(blank=True, null=True, upload_to='problems/', verbose_name='問題ファイル')),
                ('statement', models.TextField(verbose_name='問題文')),
                ('genre', models.CharField(choices=[('crypto', 'Crypto'), ('forensics', 'Forensics'), ('reversing', 'Reversing'), ('pwnable', 'Pwnable'), ('web', 'Web'), ('network', 'Network'), ('misc', 'Misc')], max_length=255, verbose_name='問題ジャンル')),
                ('level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], verbose_name='問題難易度')),
                ('score', models.IntegerField(verbose_name='問題得点')),
                ('answer', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='正しい入力方式で入力してください。', regex='^ctf\\{[\\w]+\\}$')], verbose_name='問題解答')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='問題作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='問題更新日時')),
            ],
            options={
                'verbose_name': '問題',
                'verbose_name_plural': '問題',
                'db_table': 'problem',
            },
        ),
        migrations.CreateModel(
            name='UserProblem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem_correct_answer', models.BooleanField(default=0, verbose_name='問題正解')),
                ('corrected_at', models.DateTimeField(blank=True, null=True, verbose_name='問題正解日時')),
                ('custom_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='ユーザ名')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ctf.problem', verbose_name='問題名')),
            ],
            options={
                'verbose_name': 'ユーザ問題',
                'verbose_name_plural': 'ユーザ問題',
                'db_table': 'user_problem',
                'unique_together': {('custom_user', 'problem')},
            },
        ),
        migrations.AddField(
            model_name='problem',
            name='custom_user',
            field=models.ManyToManyField(through='ctf.UserProblem', to=settings.AUTH_USER_MODEL),
        ),
    ]
